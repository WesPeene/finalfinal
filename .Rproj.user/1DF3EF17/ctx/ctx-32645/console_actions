{
    "type": [
        2,
        2,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        0,
        1,
        0,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        2
    ],
    "data": [
        "\nR version 4.3.3 (2024-02-29 ucrt) -- \"Angel Food Cake\"\nCopyright (C) 2024 The R Foundation for Statistical Computing\nPlatform: x86_64-w64-mingw32/x64 (64-bit)\n\nR is free software and comes with ABSOLUTELY NO WARRANTY.\nYou are welcome to redistribute it under certain conditions.\nType 'license()' or 'licence()' for distribution details.\n\n  Natural language support but running in an English locale\n\nR is a collaborative project with many contributors.\nType 'contributors()' for more information and\n'citation()'",
        " on how to cite R or R packages in publications.\n\nType 'demo()' for some demos, 'help()' for on-line help, or\n'help.start()' for an HTML browser interface to help.\nType 'q()' to quit R.\n\n- Project '~/QUARTOPROJECT' loaded. [renv 1.0.7]\n- The project is out-of-sync -- use `renv::status()` for details.\n[Workspace loaded from ~/QUARTOPROJECT/.RData]\r\n\r\n",
        "> ",
        "reticulate::repl_python()",
        "Python 3.12.3 (C:/Users/C25Weston.Peene/AppData/Local/Programs/Python/Python312/python.exe)\nReticulate 1.36.0 REPL -- A Python interpreter in R.\nEnter 'exit' or 'quit' to exit the REPL and return to R.\n",
        ">>> ",
        "from shiny import App, render, ui, reactive",
        ">>> ",
        "import requests",
        ">>> ",
        "import logging",
        ">>> ",
        "from flask import Flask",
        ">>> ",
        ">>> ",
        ">>> ",
        "@app.route('/')",
        "... ",
        "... ",
        "api_url = 'http://127.0.0.1:8080/predict'",
        "  File \"<string>\", line 1\n    @app.route('/')\nSyntaxError: invalid syntax\n",
        ">>> ",
        "logging.basicConfig(",
        "... ",
        "    format='%(asctime)s - %(message)s',",
        "... ",
        "    level=logging.INFO",
        "... ",
        ")",
        ">>> ",
        ">>> ",
        "app_ui = ui.page_fluid(",
        "... ",
        "    ui.panel_title(\"Penguin Mass Predictor\"), ",
        "... ",
        "    ui.layout_sidebar(",
        "... ",
        "        ui.panel_sidebar(",
        "... ",
        "            [ui.input_slider(\"bill_length\", \"Bill Length (mm)\", 30, 60, 45, step = 0.1),",
        "... ",
        "            ui.input_select(\"sex\", \"Sex\", [\"Male\", \"Female\"]),",
        "... ",
        "            ui.input_select(\"species\", \"Species\", [\"Adelie\", \"Chinstrap\", \"Gentoo\"]),",
        "... ",
        "            ui.input_action_button(\"predict\", \"Predict\")]",
        "... ",
        "        ),",
        "... ",
        "        ui.panel_main(",
        "... ",
        "            ui.h2(\"Penguin Parameters\"),",
        "... ",
        "            ui.output_text_verbatim(\"vals_out\"),",
        "... ",
        "            ui.h2(\"Predicted Penguin Mass (g)\"), ",
        "... ",
        "            ui.output_text(\"pred_out\")",
        "... ",
        "        )",
        "... ",
        "    )   ",
        "... ",
        ")",
        ">>> ",
        ">>> ",
        "def server(input, output, session):",
        "... ",
        "    logging.info(\"App start\")",
        "... ",
        "    ",
        "... ",
        "    @reactive.Calc",
        "... ",
        "    def vals():",
        "... ",
        "        d = {",
        "... ",
        "            \"bill_length_mm\" : input.bill_length(),",
        "... ",
        "            \"sex_Male\" : input.sex() == \"Male\",",
        "... ",
        "            \"species_Gentoo\" : input.species() == \"Gentoo\", ",
        "... ",
        "            \"species_Chinstrap\" : input.species() == \"Chinstrap\"",
        "... ",
        "        ",
        "... ",
        "        }",
        "... ",
        "        return d",
        "... ",
        "    ",
        "... ",
        "    @reactive.Calc",
        "... ",
        "    @reactive.event(input.predict)",
        "... ",
        "    def pred():",
        "... ",
        "        logging.info(\"Request Made\")",
        "... ",
        "        r = requests.post(api_url, json = vals())",
        "... ",
        "        logging.info(\"Request Returned\")",
        "... ",
        "        ",
        "... ",
        "        if r.status_code != 200:",
        "... ",
        "            logging.error(\"HTTP error returned\")",
        "... ",
        "            ",
        "... ",
        "        return r.json().get('predict')[0]",
        "... ",
        "        ",
        "... ",
        "    @output",
        "... ",
        "    @render.text",
        "... ",
        "    def vals_out():",
        "... ",
        "        return f\"{vals()}\"",
        "... ",
        "        ",
        "... ",
        "    @output",
        "... ",
        "    @render.text",
        "... ",
        "    def pred_out():",
        "... ",
        "        return f\"{round(pred())}\"",
        "... ",
        "        ",
        "... ",
        "app = App(app_ui, server)",
        ">>> ",
        ">>> ",
        ">>> ",
        "if __name__ == '__main__':",
        "... ",
        "    app.run()",
        "... ",
        "    ",
        "... ",
        "    ",
        "... ",
        "python pyapp.py",
        "INFO:     Started server process [1152]\r\nINFO:     Waiting for application startup.\r\nINFO:     Application startup complete.\r\nINFO:     Uvicorn running on http://127.0.0.1:8000 (Press CTRL+C to quit)\r\n",
        "\nRestarting R session...\n\n"
    ]
}